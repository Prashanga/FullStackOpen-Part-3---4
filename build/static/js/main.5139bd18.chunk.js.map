{"version":3,"sources":["components/Numbers.js","components/Input.js","components/Search.js","services/contacts.js","components/Notification.js","App.js","index.js"],"names":["Numbers","numbers","deleteHandleClick","map","number","i","key","name","onClick","Input","value","onChangeHandler","type","onChange","Search","sMatch","match","url","axios","get","then","res","data","id","delete","contact","post","put","Notification","message","notificationType","className","App","useState","searchQuery","setSearchQuery","searchMatch","setSearchMatch","notificationMessage","setNotificationMessage","errorMessage","setErrorMessage","contacts","setContacts","names","setNames","useEffect","allContacts","contactService","response","toLowerCase","newName","setNewName","newNumber","setNewNumber","event","search","target","filter","person","onSubmit","preventDefault","indexOf","toLocaleLowerCase","concat","setTimeout","catch","err","console","log","error","window","confirm","length","contactClicked","newContacts","newNames","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.5139bd18.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst Numbers = ({numbers,deleteHandleClick}) => (\r\n    numbers.map((number,i)=><p key={i}>{number.name}    {number.number} <button onClick={()=>deleteHandleClick(number)}>Delete</button></p>)\r\n)\r\n\r\nexport default Numbers;","import React from 'react';\r\n\r\nconst Input = ({value,onChangeHandler}) => (<input type=\"text\" value={value} onChange={onChangeHandler}/>)\r\n\r\n\r\nexport default Input;\r\n","import React from 'react';\r\n\r\nconst Search = ({sMatch}) => (sMatch.map((match,i)=><p key={i}>{match.name}   {match.number}</p>))\r\n\r\n\r\n\r\n\r\nexport default Search;","import axios from 'axios';\r\n\r\n// const url = \"https://fullstack-part-3b-backend.herokuapp.com/api/persons\";\r\n\r\nconst url = \"/api/persons\"\r\n\r\nconst getAll = () => {\r\n    let response = axios.get(url);\r\n    return response.then(res=>res.data);\r\n}\r\n\r\nconst deleteOne = (id) => {\r\n    let response = axios.delete(`${url}/${id}`);\r\n    return response.then(res=>res.data)\r\n}\r\n\r\nconst postOne = (contact) => {\r\n    let response = axios.post(url, contact);\r\n    return response.then(res=> res.data);\r\n}\r\n\r\nconst appendNumber = (contact) => {\r\n\r\n    // let contactsFound = axios.get(url)\r\n    // .then(res=> res.data.find(contacts => contacts.name === contact.name));\r\n\r\n    // let response = contactsFound\r\n    // .then(contactFoundinDb=> {\r\n    //     let updatedContact = {...contactFoundinDb, number:contact.number};\r\n    //     return axios.put(`${url}/${contactFoundinDb.id}`,updatedContact)     \r\n    // })\r\n\r\n    let response = axios.put(`${url}/append`,contact)\r\n    return response.then(res=>res.data);\r\n \r\n}\r\n\r\nexport default {\r\n    getAll: getAll,\r\n    deleteOne: deleteOne,\r\n    postOne: postOne,\r\n    appendNumber: appendNumber\r\n}","import React from 'react';\r\n\r\nconst Notification = ({message,notificationType}) => {\r\n    \r\n    if(message === null){\r\n        return null;\r\n    }\r\n\r\n    return(\r\n    <div className={notificationType}>\r\n        {message}\r\n    </div>\r\n    )\r\n\r\n}\r\n\r\n\r\nexport default Notification;","import React, { useState, useEffect } from 'react';\nimport Numbers from './components/Numbers';\nimport Input from './components/Input';\nimport Search from './components/Search';\nimport contactService from './services/contacts'\nimport Notification from './components/Notification'\n\nconst App = () => {\n\n  const [searchQuery,setSearchQuery] = useState('');\n  const [searchMatch, setSearchMatch] = useState([]);\n  const [notificationMessage, setNotificationMessage] = useState(null);\n  const [errorMessage, setErrorMessage] = useState(null);\n\n  const [contacts, setContacts] =  useState([]);\n  //Array of just the names\n  const [names, setNames] = useState([]);\n\n  const hook = () => {\n   let allContacts = contactService.getAll();\n    allContacts.then(response=>setContacts(response))\n    allContacts.then(res => setNames(res.map(contact=> contact.name.toLowerCase())))\n  }\n\n  useEffect(hook,[]);\n\n\n  \n\n  const [ newName, setNewName ] = useState('');//Name typed in input textarea\n  const [ newNumber, setNewNumber ] = useState('');\n\n  const inputNameHandler = (event) =>(\n    setNewName(event.target.value)\n  );\n\n  const inputNumberHandler = (event) =>(\n    setNewNumber(event.target.value)\n  );\n\n \n  const formSubmitHandler = (event) => {\n    event.preventDefault();\n\n    //If the name doesn't exist in the phonebook\n    if(names.indexOf(newName.toLocaleLowerCase())===-1){\n\n      let tempName =  {name: newName, number: newNumber};\n      contactService.postOne(tempName)\n      .then(res=>{\n        setContacts(contacts.concat(res));\n        setNames(names.concat(res.name.toLocaleLowerCase()));\n        setNewName('');\n        setNewNumber('');\n        setNotificationMessage(`${res.name} successfully added to the phonebook with id ${res.id}`);\n        setTimeout(() => {setNotificationMessage(null)}, 5000)\n      })\n      .catch(err=>{\n        console.log(\"Error from frontend\", err.response.data.error);\n        setErrorMessage(`${err.response.data.error}`);\n        setTimeout(() => {setErrorMessage(null)}, 5000)\n      })\n      \n    }\n\n    //If the contact exists\n    else{\n      let result = window.confirm(`${newName} is already added to phonebook, replace the old number with a new one?`);\n      if(result){\n          let newContact = {name: newName,number: newNumber};\n          let newUpdatedContact = contactService.appendNumber(newContact)\n          \n          newUpdatedContact.then(res=>{\n            setContacts(contacts.map(contact=>contact.id===res.id?res:contact))\n            setNotificationMessage(`${res.name}'s contact number successfully changed to ${res.number}`);\n            setTimeout(() => {setNotificationMessage(null)}, 5000)\n          })\n          .catch(err=>{\n            setErrorMessage(`Contact already removed or is no longer present`);\n            setTimeout(() => {\n              setErrorMessage(null);\n              setContacts(contacts.filter(contact=>contact.name!==newName));\n              setNames(names.filter(name=>name!==newName.toLowerCase())); \n              setNewName('');\n              setNewNumber('');\n            }, 3000)\n          })\n      }\n    }\n  }\n\n  const searchQueryHandler = (event) =>\n  {\n    let search = event.target.value;\n    setSearchQuery(search);\n    let match = contacts.filter(person => person.name.toLowerCase().search(search.toLowerCase())!==-1)\n    setSearchMatch(match);\n  }\n\n  const deleteHandleClick = (contactClicked) =>{\n    let result = window.confirm(`Delete ${contactClicked.name}`);\n    if(result){\n      contactService.deleteOne(contactClicked.id)\n        .then(res=>{\n          let newContacts = contacts.filter(contact=>contact.id !== contactClicked.id);\n          let newNames = names.filter(name => name!==contactClicked.name)\n          setContacts(newContacts);\n          setNames(newNames)\n          setNotificationMessage(`${contactClicked.name} successfully deleted`);\n          setTimeout(() => {setNotificationMessage(null)}, 5000)\n          console.log(res);\n        })\n        .catch(err=>{\n          setErrorMessage(`Contact already removed or is no longer present`);\n          setTimeout(() => {\n            setErrorMessage(null);\n            setContacts(contacts.filter(contact=>contact.id !== contactClicked.id));\n            setNames(names.filter(name=>name!==contactClicked.name.toLowerCase()));\n            setNewName('');\n              setNewNumber('');\n          }, 3000)\n        });\n    }\n      \n  }\n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n      \n      <p>filter shown with\n        <Input value={searchQuery} onChangeHandler={searchQueryHandler} />\n      </p>        \n      \n      <h2>add a new</h2>\n      <Notification notificationType=\"success\" message={notificationMessage} />\n      <Notification notificationType=\"error\" message={errorMessage} />\n      <form onSubmit={formSubmitHandler}>\n        <div>\n          name:     \n          <Input value={newName} onChangeHandler={inputNameHandler} />      \n        </div>\n        <div>\n          number:      \n          <Input value={newNumber} onChangeHandler={inputNumberHandler} />        \n        </div>\n        <div>\n          <button type=\"submit\">add</button>\n        </div>\n      </form>\n\n\n      <h2>Numbers</h2>\n      {searchMatch.length>0?<Search sMatch={searchMatch} />:<Numbers numbers={contacts} deleteHandleClick={deleteHandleClick}/>}\n      \n    </div>\n  )\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n"],"sourceRoot":""}